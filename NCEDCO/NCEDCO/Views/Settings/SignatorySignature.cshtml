@model NCEDCO.Models.M_Signatory
@{
    ViewBag.Title = "Signatory Signature";
}

<!-- Page Heading/Breadcrumbs -->
<div class="row">
    <div class="col-lg-12">
        <h3 class="page-header">
            <small>Registration</small>
        </h3>
        <ol class="breadcrumb">
            <li><a href="index.html">Settings</a>
            </li>
            <li class="active">Signatory Signature</li>
        </ol>
    </div>
</div>
<!-- /.row -->

<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">Signatory Signature Settup Form</div>
            <div class="panel-body">
                <form id="FrmPCRegister" class="form-horizontal" autocomplete="off" enctype="multipart/form-data">

                    <div class="form-group">
                        @Html.LabelFor(m => m.UserId, new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-7">
                            @Html.DropDownListFor(model => model.UserId, ViewBag.Bag_SignatoryList as SelectList, "", new { @class = "form-control" })
                        </div>
                        <div class="col-sm-3">
                            @Html.ValidationMessageFor(model => model.UserId, null, new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Signature_Path, new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-7">
                            <div class="fileUpload btn btn-default">
                                <input type="file" id="Signature_Path" class="upload" accept=".pfx,.PFX">
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <label id="lblErSignature" class="control-label" style="color: #e83a3a"></label>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Singature_Img, new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-7">
                            <div class="fileUpload btn btn-default">
                                <input type="file" id="Singature_Img" class="upload" accept="image/*">
                            </div>
                        </div>
                        @*<div class="col-sm-3">
                            @Html.ValidationMessageFor(model => model.UserId, null, new { @class = "text-danger" })
                        </div>*@
                    </div>
                    <div class="modal-footer">
                        <a href="#" id="btnSubmit" class="btn btn-primary"><span class="fa fa-bookmark"></span>Save <span style="text-align: center; display: none" id="loaderDiv">
                            <img src="~/Images/ellipsis.gif" /></span></a>
                    </div>
                </form>
            </div>
            <div class="panel-footer">Signatory Signature Settup Form</div>
        </div>

    </div>

</div>

<!--Notification Modals -->
<div id="errorModel" class="modal fade" role="dialog" tabindex="-1" aria-labelledby="myModalLabel">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content" id="MyModelBody">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Error !</h4>
            </div>
            <div class="modal-body">
                <label id="ErrorLable" class="control-label" style="color: #e83a3a"></label>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div id="SModel" class="modal fade" role="dialog">
  <div class="modal-dialog">

    <!-- Modal content-->
    <div class="modal-content"  id="SModelBody">
        <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Successful !</h4>
            </div>
            <div class="modal-body">
                <label id="lblSuccess" style="color:#0e751b">Signatory Signature Uploaded Succesfully</label>
            </div>
        
    </div>

  </div>
</div>
<script>
    $(document).ready(function () {

        $("#btnSubmit").click(function () {
            debugger
            if (!$("#Signature_Path").val()) {
                $("#Signature_Path").closest('.form-group').addClass('has-error');

                $("#ErrorLable").text("Please Select a PFX File Path");
                $("#errorModel").modal("show");
                return;
            }
            if (!$("#Singature_Img").val()) {
                $("#Singature_Img").closest('.form-group').addClass('has-error');
                
                $("#ErrorLable").text("Please Select a Image File Path");
                $("#errorModel").modal("show");
                return;
            }
            if (!$("#UserId").val()) {
                $("#UserId").closest('.form-group').addClass('has-error');
                
                $("#ErrorLable").text("Please Select a User");
                $("#errorModel").modal("show");
                return;
            }
            $("#loaderDiv").show();

            var Pfx = $("#Signature_Path")[0].files;
            var Img = $("#Singature_Img")[0].files;
            var data = new FormData;
            data.append("Singature_Img", Img[0]);
            data.append("Signature_Path", Pfx[0]);
            data.append("UserId", $("#UserId").val());

            $.ajax({
                type: "POST",
                url: "/Settings/SignatorySignature",
                data: data,
                contentType: false,
                processData: false,
                success: function (result) {
                    $("#loaderDiv").hide();
                    if (result) {
                        $("#SModel").modal("show");                   
                    }
                    else {

                        $("#ErrorLable").text("An Error Occoured while Completing the Request. Please Try Again Later !!");
                        $("#btnCreateTeacher").prop('value', 'Save');
                        $("#errorModel").modal("show");
                    }
                }


            })

        })

        //var validFilesTypes = ["pfx"];

        //$("#Signature_Path").change(function () {

        //    var file = $("#Signature_Path")[0].files;
        //    var label = document.getElementById("<%=lblErSignature.ClientID%>");
        //    var path = file.value;
        //    var ext = path.substring(path.lastIndexOf(".") + 1, path.length).toLowerCase();
        //    var isValidFile = false;
        //    for (var i = 0; i < validFilesTypes.length; i++) {
        //        if (ext == validFilesTypes[i]) {
        //            isValidFile = true;
        //            break;
        //        }
        //    }
        //    if (!isValidFile) {
        //        label.style.color = "red";
        //        label.innerHTML = "Invalid File. Please upload a File with" +
        //         " extension:\n\n" + validFilesTypes.join(", ");
        //    }
        //    return isValidFile;
        //});
    })

   

</script>
