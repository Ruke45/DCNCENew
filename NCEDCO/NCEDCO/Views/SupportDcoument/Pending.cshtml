@model IEnumerable<NCEDCO.Models.M_SupportDocumentUpload>
@{
    ViewBag.Title = "Pending Supporting Document Request";
}

<!-- Page Heading/Breadcrumbs -->
<div class="row">
    <div class="col-lg-12">
        <h3 class="page-header">
            <small>Pending Supporting Document Requests</small>
        </h3>
        <ol class="breadcrumb">
            <li><a href="index.html">Supporting Document Request </a>
            </li>
            <li class="active">Pending Supporting Document Requests</li>
        </ol>
    </div>
</div>
<!-- /.row -->

<div class="row">

    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading">Pending Supporting Document Table <a href="#" id="bulkS" class="btn btn-primary btn-sm" style="float:right"">Bulk Sign</a></div> 



            <div class="panel-body">
                <table id="datatable" class="table table-striped table-bordered" style="font-size:11px;">
                    <thead>
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.RequestRefNo)</th>
                            <th>@Html.DisplayNameFor(model => model.DocumentTitle)</th>
                            <th>@Html.DisplayNameFor(model => model.ClientId)</th>
                            <th>@Html.DisplayNameFor(model => model.UploadedDate)</th>
                            <th>@Html.DisplayNameFor(model => model.UploadedBy)</th>
                            <th>Parent</th>
                            <th>Document</th>
                            <th>Bulk</th>
                            <th>Action</th>
                        </tr>
                    </thead>


                    <tbody>
                        @if (Model != null)
                        {
                            foreach (var item in Model)
                            {

                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.RequestRefNo)</td>
                                <td>@Html.DisplayFor(modelItem => item.SupportingDocumentID) | @Html.DisplayFor(modelItem => item.DocumentName)</td>
                                <td>@Html.DisplayFor(modelItem => item.ClientId)</td>
                                <td>@item.UploadedDate</td>
                                <td>@Html.DisplayFor(modelItem => item.UploadedBy)</td>
                                <td>@Html.DisplayFor(modelItem => item.ParentId)</td>
                                <td align="center"><a href="#" class="btn btn-primary btn-xs" onclick='viewCertificate("@item.UploadedPath")'>View</a></td>
                                @{
                                    var Checkedid = item.RequestRefNo;
                                    }
                                <td align="center"><input type="checkbox" class="chk" id='@Checkedid' name="@Checkedid" value='@Checkedid'></td>
                                <td align="center">
                                    <div class="btn-group btn-group-sm">
                                        <a href="#" class="btn btn-primary"  onclick='ApproveSD("@item.RequestRefNo")'>Approve</a> 
                                        <a href="#" class="btn btn-default" onclick='Reject("@item.RequestRefNo")'>Reject</a>
                                    </div>
                                </td>
                            </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
             <div class="panel-footer">Pending Supporting Document Table</div>
        </div>
    </div>
</div>

<!-- Modal -->
<div id="OModel" class="modal fade" role="dialog">
  <div class="modal-dialog">

    <!-- Modal content-->
    <div class="modal-content"  id="OModelBody">

    </div>

  </div>
</div>
<div id="errorModel" class="modal fade" role="dialog" tabindex="-1" aria-labelledby="myModalLabel">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content" id="MyModelBody">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Error !</h4>
            </div>
            <div class="modal-body">
                <label id="ErrorLable" class="control-label" style="color: #e83a3a"></label>
            </div>
        </div>
    </div>
</div>

<script src="~/Scripts/pace/pace.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $('#datatable').dataTable();
        $('#datatable-keytable').DataTable({
            keys: true
        });
        $('#datatable-responsive').DataTable();
        $('#datatable-scroller').DataTable({
            ajax: "js/datatables/json/scroller-demo.json",
            deferRender: true,
            scrollY: 380,
            scrollCollapse: true,
            scroller: true
        });
        var table = $('#datatable-fixed-header').DataTable({
            fixedHeader: true
        });

        $("#bulkS").click(function () {
            getValueUsingClass();
        });
    });
    TableManageButtons.init();
    </script>
<script>
    var ApproveSD = function (Req) {
        var Url = "/SupportDcoument/ApproveSD?Id=" + Req;
        $("#OModelBody").load(Url, function () {
            $("#OModel").modal("show");
        })
    }
    var viewSupporting = function (ID) {
        var Url = "/CertificateRequest/ViewPDF?ID=" + ID;
        window.open(Url, "_blank")
    }

    var ApproveBulk = function (Req) {
        var Url = "/SupportDcoument/BulkSign_Model?IDs=" + Req;
        $("#OModelBody").load(Url, function () {
            $("#OModel").modal("show");
        })
    }

    var Reject = function (Req,Ctyp) {
        var Url = "/CertificateRequest/RejectC?Rid=" + Req + "&Ctyp=" + Ctyp;
        $("#OModelBody").load(Url, function () {
            $("#OModel").modal("show");
        })
    }

    function getValueUsingClass() {
        /* declare an checkbox array */
        var chkArray = [];
        /* look for all checkboes that have a class 'chk' attached to it and check if it was checked */
        $(".chk:checked").each(function () {
            chkArray.push($(this).val());
        });

        /* we join the array separated by the comma */
        var selected;
        selected = chkArray.join(',');

        /* check if there is selected checkboxes, by default the length is 1 as it contains one single comma */
        if (selected.length > 0) {
            ApproveBulk(selected)
        } else {
            alert("Please at least check one of the checkbox");
        }
    }

    function AjaxPost(countryArray) {
        var ajaxConfig = {
            type: "POST",
            url: "/CertificateRequest/BulkSign",
            //contentType: 'application/json',
            data: { function_param: JSON.stringify(countryArray) },
            success: function (result) {
                if (result.Msg == "Succes") {

                    $('#LoadTemplate').load('/CertificateRequest/LoadRefferenceCR?Reff=' + result.Cid);
                    $('#LoadTemplate').show();
                    $('#Rqid').text(result.RqId);
                    $("#SMsg").show();
                }
                else {
                    $("#ErrorLable").text("Unable to Complete the Certificate Request. Please Contact the Administrator !");
                    $("#errorModel").modal("show");
                }

            }
        }
        $.ajax(ajaxConfig);
        return false;
    }
</script>



